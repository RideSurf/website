<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no" />
  <title>RideSurf</title>

  <!-- CSS  -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <link href="stylesheets/materialize.css" type="text/css" rel="stylesheet" media="screen,projection" />
  <link href="stylesheets/style.css" type="text/css" rel="stylesheet" media="screen,projection" />
</head>
<body>
  <!--            NAVBAR            -->
  <nav class="orange darken-1" role="navigation">
    <div class="nav-wrapper container">
      <a id="logo-container" href="#" class="brand-logo center">
        <a href="#!" class="brand-logo center">Your Trip</a>
      </a>
      <ul id="nav-mobile" class="side-nav">
        <li><a href="#">Navbar Link</a></li>
      </ul>
      <a href="#" data-activates="nav-mobile" class="button-collapse"><i class="material-icons">menu</i></a>
      <a href="#" data-activates="nav-mobile" class="right button-collapse"><i class="material-icons">add</i></a>
    </div>
  </nav>

  <div class="container">
    <div class="section">
      <form class="col s12">
        <div class="row">
          <div class="col s12">
            <div class="card blue-grey darken-1">
              <div class="card-content white-text">
                <span class="card-title">Trip Map:</span>
                <img src="images/tripMap2.png" id="map2" alt="">
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col s12">
          <div class="card blue-grey darken-1">
            <div class="card-content white-text">
              <span class="card-title">Trip Details:</span>
              <ul>
                <li>Dates: May 27 - May 28</li>
                <li>Location: Whistler</li>
                <li>Departure: early morning</li>
                <li>Return: late afternoon</li>
                <li>Seats filled in vehicle: 1/?</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      <button class="btn waves-effect waves-light" type="submit" name="action">
        Click to chat with your fellow surfers!
        <i class="material-icons center">send</i>
      </form>
    </div>
  </div>
  <!--  Scripts-->
  <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
  <script src="javascripts/materialize.js"></script>
  <script src="javascripts/init.js"></script>
  <script>
  function initAutocomplete() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: 47.608013, lng: -122.335167 },
      zoom: 8,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    // Create the search box and link it to the UI element.
    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    // Bias the SearchBox results towards current map's viewport.
    map.addListener('bounds_changed', function () {
      searchBox.setBounds(map.getBounds());
    });

    var markers = [];
    // Listen for the event fired when the user selects a prediction and retrieve
    // more details for that place.
    searchBox.addListener('places_changed', function () {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      // Clear out the old markers.
      markers.forEach(function (marker) {
        marker.setMap(null);
      });
      markers = [];

      // For each place, get the icon, name and location.
      var bounds = new google.maps.LatLngBounds();
      places.forEach(function (place) {
        var icon = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

        // Create a marker for each place.
        markers.push(new google.maps.Marker({
          map: map,
          icon: icon,
          title: place.name,
          position: place.geometry.location
        }));

        if (place.geometry.viewport) {
          // Only geocodes have viewport.
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });
  }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB8OtHcixGAyhWpRObeAvAB7rAM7AVTgUw&libraries=places&callback=initAutocomplete"
  async defer></script>
</body>
</html>
